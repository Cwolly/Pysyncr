Pysyncr workflow

Clent Program:

1) First time the user opens the program a GUI pops open and asks the user for
    A) server name or IP
        I) Attempts to connect to server and verify that the pysyncr server is operational. If this            works, move on, if not let the user know that hostname/IP is incorrect. Do not let user            proceed.
    B) existing username and password, or (goto 4)
    C) to create a new username and password (goto 2)

2) If a user selects to create username they are prompted with a new screen that asks for an email address, username and password. '''Not sure if email should be optional, but it would be nice to kick off an email to the user with their account info.'''

3) Server checks if username exists. If it does, error, please use different name. If it does not, username is created on the server and a folder is created for the user, associated with the username, and is the user's "pysyncr folder".

4) Prompt user for local pysyncr folder. This folder can be an existing folder, or the user can create it.

5) Initial sync from local folder to server folder happens. A notification icon sits in the tray to notify user that the process is taking place.

6) Daemon process kicks off an waits for notification from Kernel if a file changes, if it does, folders sync again.

Server program:

1) Server program checks the system to make sure necessary applications are installed: Python, Rsync,

2) Server creates priviledged user pysyncr and creates and ssl key associated with the account, or a file that it hashes?
#nido: actually; you can have multiple ssh-keys associated to one
#      account; the safest would be to have the client create a ssh-key
#      and send that to the system out-of-band. (I.E. by the user
#      itself). We could create a spiffy key upload page or something
#      alike.
3) Installs front end (django) and associates the media folder where user folders will be located.

4) Opens some type of daemon process that listens for incoming rsync/pysyncr connections. Kicks off rsync to client if client folder is empty and server folder is not '''this would be due to multiple clients'''

5)
